return {
  -- { -- Fuzzy Finder (files, lsp, etc)
  --   'nvim-telescope/telescope.nvim',
  --   cond = vim.g.vscode == nil,
  --   event = 'VimEnter',
  --   branch = '0.1.x',
  --   dependencies = {
  --     'nvim-lua/plenary.nvim',
  --     { -- If encountering errors, see telescope-fzf-native README for installation instructions
  --       'nvim-telescope/telescope-fzf-native.nvim',
  --
  --       -- `build` is used to run some command when the plugin is installed/updated.
  --       -- This is only run then, not every time Neovim starts up.
  --       build = 'make',
  --
  --       -- `cond` is a condition used to determine whether this plugin should be
  --       -- installed and loaded.
  --       cond = function()
  --         return vim.fn.executable 'make' == 1
  --       end,
  --     },
  --     { 'nvim-telescope/telescope-ui-select.nvim' },
  --
  --     -- Useful for getting pretty icons, but requires a Nerd Font.
  --     { 'nvim-tree/nvim-web-devicons', enabled = vim.g.have_nerd_font },
  --     { 'benfowler/telescope-luasnip.nvim' },
  --   },
  --   config = function()
  --     -- [[ Configure Telescope ]]
  --     -- See `:help telescope` and `:help telescope.setup()`
  --     require('telescope').setup {
  --       -- You can put your default mappings / updates / etc. in here
  --       --  All the info you're looking for is in `:help telescope.setup()`
  --       --
  --       defaults = {
  --         mappings = {
  --           n = {
  --             ['<c-d>'] = require('telescope.actions').delete_buffer,
  --           }, -- n
  --           i = {
  --             ['<C-h>'] = 'which_key',
  --             ['<c-d>'] = require('telescope.actions').delete_buffer,
  --           }, -- i
  --         },
  --       },
  --       -- pickers = {}
  --       extensions = {
  --         ['ui-select'] = {
  --           require('telescope.themes').get_dropdown(),
  --         },
  --         fzf = {
  --           fuzzy = true, -- false will only do exact matching
  --           override_generic_sorter = true, -- override the generic sorter
  --           override_file_sorter = true, -- override the file sorter
  --           case_mode = 'smart_case', -- or "ignore_case" or "respect_case"
  --           -- the default case_mode is "smart_case"
  --         },
  --         luasnip = require('telescope.themes').get_dropdown {
  --           preview = {
  --             check_mime_type = true,
  --           },
  --         },
  --       },
  --     }
  --
  --     -- Enable Telescope extensions if they are installed
  --     pcall(require('telescope').load_extension, 'fzf')
  --     pcall(require('telescope').load_extension, 'ui-select')
  --     pcall(require('telescope').load_extension, 'luasnip')
  --     pcall(require('telescope').load_extension, 'notify')
  --
  --     -- See `:help telescope.builtin`
  --     local builtin = require 'telescope.builtin'
  --
  --     -- Smartly opens either git_files or find_files, depending on whether the working directory is
  --     -- contained in a Git repo.
  --     function find_project_files(opts)
  --       local opts = vim.tbl_deep_extend('force', opts or {}, { show_untracked = true })
  --       local ok = pcall(builtin.git_files, opts)
  --
  --       if not ok then
  --         builtin.find_files(opts)
  --       end
  --     end
  --
  --     vim.keymap.set('n', '<leader>fh', builtin.help_tags, { desc = '[F]ind [H]elp' })
  --     vim.keymap.set('n', '<leader>fk', builtin.keymaps, { desc = '[F]ind [K]eymaps' })
  --     vim.keymap.set('n', '<leader>ff', find_project_files, { desc = '[F]ind [F]iles' })
  --     vim.keymap.set('n', '<leader>fw', builtin.grep_string, { desc = '[F]ind current [W]ord' })
  --     vim.keymap.set('n', '<leader>fg', builtin.live_grep, { desc = '[F]ind by [G]rep' })
  --     vim.keymap.set('n', '<leader>fd', builtin.diagnostics, { desc = '[F]ind [D]iagnostics' })
  --     vim.keymap.set('n', '<leader>fr', builtin.resume, { desc = '[F]ind [R]esume' })
  --     vim.keymap.set('n', '<leader>f.', builtin.oldfiles, { desc = '[F]ind Recent Files ("." for repeat)' })
  --     vim.keymap.set('n', '<space><space>', builtin.buffers, { desc = '[F]ind existing buffers' })
  --     vim.keymap.set('n', '<leader>fp', function()
  --       vim.cmd [[ Telescope luasnip ]]
  --     end, { desc = '[F]ind existing snippets' })
  --
  --     -- Slightly advanced example of overriding default behavior and theme
  --     vim.keymap.set('n', '<leader>/', function()
  --       -- You can pass additional configuration to Telescope to change the theme, layout, etc.
  --       builtin.current_buffer_fuzzy_find(require('telescope.themes').get_dropdown {
  --         winblend = 10,
  --         previewer = false,
  --       })
  --     end, { desc = '[/] Fuzzily search in current buffer' })
  --
  --     -- It's also possible to pass additional configuration options.
  --     --  See `:help telescope.builtin.live_grep()` for information about particular keys
  --     vim.keymap.set('n', '<leader>f/', function()
  --       builtin.live_grep {
  --         grep_open_files = true,
  --         prompt_title = 'Live Grep in Open Files',
  --       }
  --     end, { desc = '[F]ind [/] in Open Files' })
  --
  --     -- Shortcut for searching your Neovim configuration files
  --     vim.keymap.set('n', '<leader>fm', function()
  --       vim.cmd [[Telescope notify]]
  --     end, { desc = '[F]ind [M]essages history' })
  --   end,
  -- },
}
